{
  "name": "astral-turf",
  "version": "8.0.0",
  "type": "module",
  "private": true,
  "description": "AI-powered soccer tactical planner desktop application.",
  "scripts": {
    "dev": "tauri dev",
    "vite:dev": "vite",
    "test-server": "vite --config vite.test.config.ts",
    "check-ports": "node scripts/check-port.js",
    "build": "vite build",
    "vercel-build": "prisma generate && npm run build",
    "tauri:build": "tauri build",
    "start": "npm run dev",
    "test": "vitest",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:production": "vitest run src/__tests__/production-readiness.test.ts",
    "test:fast": "vitest run --reporter=dot --no-coverage --bail=3",
    "test:parallel": "vitest run --reporter=verbose --pool=threads --poolOptions.threads.maxThreads=4",
    "test:critical": "vitest run src/__tests__/services/authService.test.ts src/__tests__/context/AppProvider.test.tsx src/__tests__/integration/TacticsBoard.test.tsx src/__tests__/components/Layout.test.tsx --reporter=verbose --bail=1",
    "test:unit-only": "vitest run src/__tests__/components src/__tests__/hooks src/__tests__/utils --reporter=verbose --coverage",
    "test:integration-only": "vitest run src/__tests__/integration src/__tests__/context src/__tests__/services --reporter=verbose --timeout=10000",
    "test:visual": "vitest run src/__tests__/visual --reporter=verbose",
    "test:a11y": "vitest run src/__tests__/accessibility --reporter=verbose",
    "test:performance": "vitest run src/__tests__/performance --reporter=verbose",
    "test:memory-leaks": "vitest run src/__tests__/performance/memory-leak-detection.test.tsx --reporter=verbose",
    "test:screen-reader": "node scripts/accessibility-test-runner.js --screen-reader-only",
    "test:keyboard": "node scripts/accessibility-test-runner.js --keyboard-only",
    "test:contrast": "node scripts/accessibility-test-runner.js --contrast-only",
    "test:visual:percy": "percy exec -- vitest run src/__tests__/visual --reporter=verbose",
    "test:optimize": "node scripts/test-optimization.js",
    "test:optimize:quick": "node scripts/test-optimization.js --quick",
    "test:optimize:coverage": "node scripts/test-optimization.js --coverage-only",
    "test:optimize:mutation": "node scripts/test-optimization.js --mutation-only",
    "test:watch": "vitest --reporter=verbose --ui=false",
    "test:zenith": "node scripts/run-zenith-tests.js",
    "test:zenith:quick": "node scripts/run-zenith-tests.js --quick",
    "test:comprehensive": "node scripts/run-comprehensive-tests.js",
    "test:site-wide": "vitest run src/__tests__/comprehensive/site-wide-validation.test.tsx --reporter=verbose",
    "test:all-components": "vitest run src/__tests__/comprehensive/all-components.test.tsx --reporter=verbose",
    "test:all-pages": "vitest run src/__tests__/comprehensive/all-pages.test.tsx --reporter=verbose",
    "test:all-workflows": "vitest run src/__tests__/comprehensive/all-workflows.test.tsx --reporter=verbose",
    "test:validate-deployment": "npm run test:comprehensive && npm run build && npm run lint && npm run type-check",
    "test:production-ready": "npm run test:zenith && npm run build && npm run lint && npm run type-check",
    "test:zenith-coverage": "node scripts/zenith-coverage-runner.js",
    "test:100-percent": "npm run test:zenith-coverage",
    "test:tactical-board": "vitest run src/__tests__/components/tactics src/__tests__/integration/TacticalBoardWorkflow.test.tsx --coverage --reporter=verbose",
    "test:e2e-comprehensive": "playwright test src/__tests__/e2e/TacticalBoardWorkflows.comprehensive.spec.ts --reporter=html",
    "test:performance-comprehensive": "vitest run src/__tests__/performance/TacticalBoardPerformance.comprehensive.test.tsx --reporter=verbose",
    "test:accessibility-comprehensive": "vitest run src/__tests__/accessibility/TacticalBoardAccessibility.comprehensive.test.tsx --reporter=verbose",
    "test:tactical-coverage": "vitest run src/__tests__/components/tactics src/__tests__/integration --coverage --reporter=verbose --reporter=json --outputFile.json=./coverage/tactical-coverage.json",
    "analyze": "node scripts/analyze-bundle.js",
    "analyze:bundle": "node scripts/check-bundle-size.js",
    "build:analyze": "npm run build && npm run analyze",
    "performance:check": "node scripts/performance-check.js",
    "performance:ci": "npm run build && npm run performance:check",
    "performance:lighthouse": "lhci autorun",
    "performance:lighthouse:mobile": "lhci autorun --config=.lighthouserc-mobile.json",
    "performance:lighthouse:desktop": "lhci autorun --config=.lighthouserc-desktop.json",
    "backup:create": "node -e \"require('./src/services/backupService.js').createBackup()\"",
    "backup:restore": "node -e \"require('./src/services/backupService.js').restoreBackup(process.argv[1])\"",
    "backup:test": "node -e \"require('./src/services/backupService.js').testBackupSystem()\"",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "e2e": "playwright test",
    "e2e:headed": "playwright test --headed",
    "e2e:debug": "playwright test --debug",
    "e2e:report": "playwright show-report",
    "e2e:tactical-board": "playwright test src/__tests__/e2e/TacticalBoardWorkflows.comprehensive.spec.ts",
    "test:all": "npm run test:run && npm run e2e",
    "test:deployment-ready": "npm run test:comprehensive && npm run test:e2e-comprehensive && npm run performance:check",
    "quality": "npm run type-check && npm run lint && npm run format:check && npm run test:run",
    "prepare": "[ \"$NODE_ENV\" = \"production\" ] || husky",
    "postinstall": "prisma generate"
  },
  "keywords": [
    "soccer",
    "tactics",
    "tauri",
    "react",
    "ai"
  ],
  "author": "Astral Turf Team",
  "license": "ISC",
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@tauri-apps/cli": "^1.6.0",
    "@testing-library/jest-dom": "^6.4.8",
    "@testing-library/react": "^16.0.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@typescript-eslint/eslint-plugin": "^8.41.0",
    "@typescript-eslint/parser": "^8.41.0",
    "@vitejs/plugin-react": "^4.3.1",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.21",
    "esbuild": "^0.25.10",
    "eslint": "^9.34.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "husky": "^9.1.7",
    "jest-axe": "^10.0.0",
    "jsdom": "^24.1.3",
    "lint-staged": "^16.1.5",
    "msw": "^2.11.0",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "tailwindcss": "^4.1.13",
    "vite": "^7.1.7",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write",
      "vitest related --run --reporter=verbose"
    ],
    "*.{json,css,md}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.6.0",
    "@axe-core/playwright": "^4.10.2",
    "@google/genai": "^1.9.0",
    "@next-auth/prisma-adapter": "^1.0.8",
    "@prisma/client": "^6.16.2",
    "@react-aria/button": "^3.14.1",
    "@react-aria/focus": "^3.21.1",
    "@react-aria/interactions": "^3.25.5",
    "@react-spring/web": "^10.0.1",
    "@tailwindcss/postcss": "^4.1.13",
    "@tauri-apps/api": "^1.6.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/crypto-js": "^4.2.2",
    "@types/dompurify": "^3.0.5",
    "@types/jsdom": "^21.1.7",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/pg": "^8.15.5",
    "@types/validator": "^13.15.3",
    "@vercel/analytics": "^1.3.3",
    "@vercel/node": "^3.2.16",
    "@vercel/speed-insights": "^1.1.3",
    "axios": "^1.7.8",
    "bcryptjs": "^3.0.2",
    "chart.js": "^4.5.0",
    "crypto-js": "^4.2.0",
    "dexie": "^4.0.8",
    "dompurify": "^3.2.7",
    "dotenv": "^17.2.2",
    "framer-motion": "^12.23.12",
    "googleapis": "^144.0.0",
    "html-to-image": "^1.11.11",
    "i18next": "^25.4.2",
    "immer": "10.1.1",
    "joi": "^18.0.1",
    "jose": "^6.1.0",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.544.0",
    "next-auth": "^4.24.10",
    "node-cron": "^3.0.3",
    "openai": "^5.23.1",
    "papaparse": "^5.4.1",
    "pg": "^8.16.3",
    "prisma": "^6.16.2",
    "react": "^18.3.1",
    "react-aria": "^3.43.1",
    "react-aria-components": "^1.12.1",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^18.3.1",
    "react-helmet-async": "^2.0.5",
    "react-i18next": "^15.7.3",
    "react-intersection-observer": "^9.16.0",
    "react-router-dom": "^6.25.1",
    "react-spring": "^10.0.1",
    "redis": "^5.8.2",
    "tailwind-merge": "^3.3.1",
    "uuid": "^11.0.3",
    "validator": "^13.15.15",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "winston-transport": "^4.9.0",
    "zod": "^3.25.76"
  }
}
